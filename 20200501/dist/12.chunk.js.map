{"version":3,"sources":["webpack:///./src/views/system/systemsetting/bgimgsetting.vue","webpack:///bgimgsetting.vue","webpack:///./src/views/system/systemsetting/styles/bgimgsetting.less","webpack:///./src/views/system/systemsetting/bgimgsetting.vue?b4de"],"names":[],"mappings":";;;;;;AACA;AACA,uBAAgR;;AAEhR;AACA;AACA;AACA;AACA,yBAAyG;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,iDAAiD,IAAI;AACpI,mCAAmC;;AAEnC;AACA,YAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuCA;;AACA;;0BAEA;;;wBAGA;sBACA;sBACA;sBACA;qBACA;wBAGA;AARA;;oBASA;sBACA;wBAEA;;mGACA;yBAEA;;2BACA;4BAEA;;qBAGA;;AAtBA;AAuBA;;cAGA;gCACA;AAGA;;;aACA;AAEA;;;;AAIA;;;;AACA;;qBACA;;qCAGA;AAFA;4EAGA;2CACA;;qCAEA;oCACA;gCACA;gEAEA;AALA;AAMA;AACA;mCACA;mCACA;uBACA;gDACA;AACA;wFACA;sBACA;qCACA;AAEA;;AAGA;;;;AACA;;uCACA;kCACA;AACA;AACA;sBACA;;qCAEA;;0BAEA;4CAGA;AAJA;AAFA;wDAOA;0CACA;wCACA;;qCAEA;oCACA;gCACA;kEAEA;AALA;AAMA;AACA;mCACA;wCACA;AACA;AACA;iDACA;qCACA;AACA;;AAGA;;;2DAEA;;iBACA;iBAEA;;iCACA;iCAEA;AACA;;AAGA;;;8CACA;qBACA;uEACA;+CACA;eACA;wCACA;2CACA;wBACA;4CACA;mDACA;yCACA;AACA;AACA;4BACA;+CACA;iBACA;AACA;AAGA;;;2EACA;sEACA;0EACA;AACA;AAGA;;;8DACA;qDACA;uEACA;6CACA;AACA;2BACA;AAEA;;AAMA;;;;;;6DACA;yCACA;2EACA;;iCAEA;gCACA;4BACA;uCAEA;AALA;AAMA;AACA;gCACA;uEACA;uCACA;iDACA;iBACA;AAGA;;;AAMA;;;;;;0DAEA,CACA;;AAGA;;;2CAEA;;+DACA;AACA;;AAGA;;;sCACA;uCACA;yCACA;2EACA;iDACA;AACA;2EACA;gDACA;yDACA;2EACA;mEACA;AACA;mBACA;8CACA;gDACA;AACA;2BACA;AACA;;AAGA;;;mDACA;uCACA;qDACA;uEACA;6CACA;AACA;2EACA;2BAEA;;mCACA;oDACA;uDACA;AACA;;AAGA;;;;AACA;;;qCAEA;gCAEA;AAHA;6EAIA;2CACA;;qCAEA;oCACA;gCACA;kEAEA;AALA;AAMA;AACA;uBACA;iCACA;gCACA;yCACA;gCAEA;uBACA;;;AACA;AACA;;AAGA;;;;AACA;;6CACA;qBACA;iCACA;gCACA;uCACA;gCAEA;AACA;AACA;oDACA;qCACA;AACA;AACA;;AAGA;;;;AACA;;+BACA;qBACA;iCACA;gCACA;uCACA;gCAEA;AACA;AACA;sBACA;;mCAEA;;0CAEA;uCACA;0CACA;wCACA;wCAGA;AAPA;AAFA;wDAUA;2CACA;;qCAEA;oCACA;gCACA;kEAEA;AALA;AAMA;AACA;uBACA;;iCAEA;gCACA;4BACA;yCAEA;AALA;qCAMA;AAEA;AAtRA;AApCA,G;;;;;;;ACxEA,yC;;;;;;;ACAA,gBAAgB,mBAAmB,aAAa,0BAA0B;AAC1E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"12.chunk.js","sourcesContent":["\n/* styles */\nrequire(\"!!../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?minimize!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-0501b2e8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!autoprefixer-loader!less-loader!./styles/bgimgsetting.less\")\n\nvar Component = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./bgimgsetting.vue\"),\n  /* template */\n  require(\"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0501b2e8\\\"}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./bgimgsetting.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\nComponent.options.__file = \"G:\\\\云拼接\\\\客户端\\\\web1.1\\\\wallweb\\\\view_el\\\\src\\\\views\\\\system\\\\systemsetting\\\\bgimgsetting.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key !== \"__esModule\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] bgimgsetting.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-loader/node_modules/vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-0501b2e8\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-0501b2e8\", Component.options)\n  }\n})()}\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/system/systemsetting/bgimgsetting.vue\n// module id = 398\n// module chunks = 12","<style lang=\"less\" src='./styles/bgimgsetting.less'></style>\r\n<template>\r\n    <div class=\"bgimgsetting\">\r\n    \t<el-row>\r\n          <el-col :span=\"24\">\r\n          <div class=\"title\"><span>{{$t('底图设置')}}</span></div>\r\n          <div class=\"title\"><span>{{$t('可设置屏幕的背景高分底图')}}</span></div>\r\n          </el-col>\r\n      </el-row>\r\n        <el-row :gutter=\"16\" style=\"height:100%;\">\r\n            <el-col :span=\"12\" style=\"height:100%;\">\r\n                <div class=\"bgform\">\r\n                    <el-form :model=\"formItem\" label-width=\"100px\" label-position='left'>\r\n                        <el-form-item :label=\"this.$t('屏组')\">\r\n                            <el-select v-model=\"formItem.WallID\" @change=\"screenGroupChange\" placeholder=\" \" class=\"el-select-block\">\r\n                                <el-option v-for=\"item in screen\" :value=\"item.ID\" :label=\"item.Name\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item :label=\"this.$t('上传图片')\">\r\n                            <el-upload\r\n                                    class=\"uploadimg\"\r\n                                    accept=\"image/png,image/jpeg\"\r\n                                    :on-success=\"uploadSucc\"\r\n                                    :on-error=\"uploadErr\"\r\n                                    name=\"image_path\"\r\n                                    :action=\"uploadUri\"\r\n                                    :multiple=\"false\"\r\n                                    ref=\"uploadimg\"\r\n                                    >\r\n                                <el-button  type=\"primary\">{{$t('点击上传')}}<i class=\"fa fa-upload\"></i></el-button>\r\n                                <div class=\"el-upload__tip\" slot=\"tip\">{{$t('只能上传jpg/png文件')}}</div>\r\n                            </el-upload>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item :label=\"$t('更新图片选项')\">\r\n                            <el-radio-group v-model=\"formItem.Type\" @change=\"imgApply\">\r\n                                <el-radio :label=\"1\">{{$t('将所选图片覆盖整个幕墙')}}</el-radio><br/>\r\n                                <el-radio :label=\"2\">{{$t('将所选图片应用到每个单元')}}</el-radio><br/>\r\n                                <el-radio :label=\"3\">{{$t('将所选图片应用到指定单元')}}</el-radio>\r\n                            </el-radio-group>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item :label=\"$t('图片指定单元')\">\r\n                            <el-select\r\n                                    v-model=\"formItem.grid\"\r\n                                    :placeholder=\"$t('请选择')\"\r\n                                    class=\"el-select-block\"\r\n                                    :disabled=\"this.formItem.Type != 3\" @change=\"setImgToGrid\">\r\n                                <el-option v-for=\"item in gridList\" :value=\"item\" :label=\"item\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                        <div class=\"bgimgbtn\">\r\n                        <el-button type=\"primary\"  @click=\"bgImageClear\">{{$t('清除背景')}}</el-button>\r\n                        <el-button type=\"primary\" @click=\"bgImageSubmit\" >{{$t('应用背景')}}</el-button>\r\n                        </div>\r\n                    </el-form>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\" style=\"height:100%;\">\r\n                <div class=\"img\">\r\n                  <div class=\"bgimg\" ref=\"bgimg\" id=\"bgimg\" >\r\n                    <div v-for=\"item in gridList\" :ref=\"item\" class=\"bg-grid\" :style=\"{'width': bgScreenWidth, 'height': bgScreenHeight}\"><span>{{item}}</span></div>\r\n                  </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n<script>\r\n    import cnf from \"../../../../config/config\";\r\n    export default {\r\n        data () {\r\n            return {\r\n                formItem: {\r\n                    WallID: '',\r\n                    Type: 1,\r\n                    grid: '',\r\n                    Path: '',\r\n                    Row: 0,\r\n                    Column: 0\r\n                },\r\n\r\n                screen: [],\r\n                gridList: [],\r\n                wallBgInfo: [],\r\n\r\n                uploadUri: cnf.apiDomain + '/api.v2.uploadImg.0.0',\r\n                uploadFiles: [],\r\n\r\n                bgScreenWidth: 0,\r\n                bgScreenHeight: 0,\r\n\r\n                isbgImg: false,\r\n\r\n            }\r\n        },\r\n        computed: {\r\n\r\n        },\r\n        created() {\r\n            /* \r\n             * 页面初始化\r\n             */\r\n            this.list()\r\n        },\r\n\r\n        methods: {\r\n            /* \r\n             * 获取屏组信息\r\n             */\r\n            list: function () {\r\n                var vm = this\r\n                var params = {\r\n                    \"userid\": this.$auth.getuid(),\r\n                }\r\n                this.$http('/api.v2.do.screen.get', params).then((res)=>{\r\n                    if (res.data.status !== 0) {\r\n                        this.$message({\r\n                            'showClose':'true',\r\n                            'duration':'1500',\r\n                            'type': 'warning',\r\n                            'message': this.$t(this.$msg[res.data.status])\r\n                        })\r\n                        return\r\n                    }\r\n                    if (!res.data.msg) {\r\n                        this.screen = []\r\n                    } else {\r\n                        this.screen = res.data.msg.body\r\n                    }\r\n                    this.formItem.WallID = ( this.screen.length != 0) ? this.screen[0].ID : ''\r\n                    this.setGridItems()\r\n                }).catch((err)=>{ })\r\n            },\r\n\r\n            /* \r\n             * 获取背景图片信息\r\n             */\r\n            getWallBgImg() {\r\n                if(!this.formItem.WallID) {\r\n                    this.wallBgInfo = []\r\n                    return\r\n                }\r\n                var url = '/api.v2.do.bgImage.get',\r\n                    params = {\r\n                        \"userid\": this.$auth.getuid(), \r\n                        \"body\": {\r\n                            \"ID\": 0,\r\n                            \"WallID\": this.formItem.WallID\r\n                        }\r\n                    }\r\n                this.$http(url, params).then((res) => {\r\n                    if (res.data.status != 0) {\r\n\t\t                    this.wallBgInfo = []\r\n                        this.$message({\r\n                            'showClose':'true',\r\n                            'duration':'1500',\r\n                            'type': 'warning',\r\n                            'message': this.$t(this.$msg[res.data.status])\r\n                        })\r\n                        return\r\n                    }\r\n                    if (!res.data.msg) {\r\n                        this.wallBgInfo = []\r\n                        return\r\n                    }         \r\n                    this.wallBgInfo = res.data.msg.body\r\n                }).catch((err) => {})    \r\n            },\r\n            /* \r\n             * 根据选定屏组设置背景网格\r\n             */\r\n            screenGroupChange(val) {  \r\n\r\n                this.getWallBgImg()\r\n                this.setGridItems()\r\n\r\n                this.formItem.Path = ''\r\n                this.formItem.Type = 1\r\n             \r\n            },\r\n            /* \r\n             * 设置背景图片网格\r\n             */\r\n            setGridItems: function(){\r\n                var vm = this\r\n                var currentScreeData = this.screen.filter(function(value){\r\n                    return value.ID == vm.formItem.WallID\r\n                })[0]\r\n                var rows = currentScreeData.Rows\r\n                var columns = currentScreeData.Columns\r\n                var items = []\r\n                for(var i = 1; i <= rows; i++ ){\r\n                    for(var j = 1; j <= columns; j++ ){\r\n                        items.push(i+'-'+j )\r\n                    }\r\n                }\r\n                this.gridList = items\r\n                this.resetBgImgGridsStyle(columns, rows)\r\n                this.clearBgImgBackground()\r\n            },\r\n            /* \r\n             * 计算每个网格宽，高所占百分比\r\n             */\r\n            resetBgImgGridsStyle: function(rows, columns) {\r\n                this.bgScreenWidth = Math.floor((1/rows * 10000))/100 + '%'\r\n                this.bgScreenHeight = Math.floor((1/columns * 10000))/100 + '%'\r\n            },\r\n            /* \r\n             * 清除预览的背景图片\r\n             */\r\n            clearBgImgBackground: function() {\r\n                this.$refs.bgimg.style.backgroundImage = 'none'\r\n                this.$refs.bgimg.childNodes.forEach(function(node, index){\r\n                    node.style.backgroundImage = 'none'\r\n                })\r\n                this.isbgImg = false\r\n            },\r\n\r\n            /*\r\n             * 上传文件成功后的钩子函数\r\n             * @param res\r\n             * @param file\r\n             * @param fileLst\r\n             */\r\n            uploadSucc(res, file, fileList ){\r\n                if(!res.cmd_bgimage.status) {\r\n                  this.$refs.uploadimg.uploadFiles = this.$lodash.clone(this.uploadFiles)\r\n                  this.$message({\r\n                    'showClose':'true',\r\n                    'duration':'1500',\r\n                    'type': 'warning',\r\n                    'message': this.$t('请上传PNG或JPEG格式图片')\r\n                  })\r\n                  return\r\n                }\r\n                this.uploadFiles = [file]\r\n                this.$refs.uploadimg.uploadFiles = this.$lodash.clone(this.uploadFiles)\r\n                if(!this.formItem.WallID) return\r\n                this.formItem.Path = res.cmd_bgimage.image_path\r\n                this.setBgImg()\r\n            },\r\n\r\n\r\n            /**\r\n             * 上传文件出错的钩子函数\r\n             * @param err\r\n             * @param file\r\n             * @param fileLst\r\n             */\r\n            uploadErr(err, file, fileLst ) {\r\n\r\n            },\r\n            /* \r\n             * 设置背景图片\r\n             */\r\n            imgApply (value){\r\n\r\n                this.formItem.WallID && this.formItem.Path && this.setBgImg() \r\n            },\r\n            /* \r\n             * 覆盖，或者每个单元设置背景图片\r\n             */\r\n            setBgImg() {\r\n                var imgUrl = this.formItem.Path\r\n                if( this.formItem.Type == 1) {\r\n                    this.$refs.bgimg.childNodes.forEach(function(node, index){\r\n                        node.style.backgroundImage = 'none'\r\n                    })\r\n                    this.$refs.bgimg.style.backgroundImage = 'url(' + imgUrl + ')'\r\n                } else if(this.formItem.Type == 2) {\r\n                    this.$refs.bgimg.style.backgroundImage = 'none'\r\n                    this.$refs.bgimg.childNodes.forEach(function(node, index){\r\n                        node.style.backgroundImage = 'url(' + imgUrl + ')'\r\n                    })\r\n                } else {\r\n                  if(this.formItem.grid == \"\") return\r\n                  this.setImgToGrid(this.formItem.grid)\r\n                }\r\n                this.isbgImg = true\r\n            },\r\n            /* \r\n             * 设置图片到指定网格\r\n             */\r\n            setImgToGrid(value) {\r\n                var imgUrl = this.formItem.Path\r\n                this.$refs.bgimg.style.backgroundImage = 'none'\r\n                this.$refs.bgimg.childNodes.forEach(function(node, index){\r\n                    node.style.backgroundImage = 'none'\r\n                })\r\n                this.$refs[value][0].style.backgroundImage = 'url(' + imgUrl + ')'\r\n                this.isbgImg = true\r\n\r\n                var Grid = value.split(\"-\")\r\n                this.formItem.Row = parseInt(Grid[0]) - 1\r\n                this.formItem.Column = parseInt(Grid[1]) - 1\r\n            },\r\n            /* \r\n             * 清除背景图片\r\n             */\r\n            delBgImg(id) {  \r\n                var params = {\r\n                    \"userid\": this.$auth.getuid(), \r\n                    \"body\":{\"ID\": id } \r\n                } \r\n                this.$http('/api.v2.do.bgImage.del', params).then((res)=>{\r\n                        if (res.data.status !== 0) {\r\n                        this.$message({\r\n                            'showClose':'true',\r\n                            'duration':'1500',\r\n                            'type': 'warning',\r\n                            'message': this.$t(this.$msg[res.data.status]),\r\n                        })\r\n                        return\r\n                    }\r\n                    this.$message({\r\n                        'showClose':'true',\r\n                        'duration':'1500',\r\n                        'message': this.$t('清除成功'),\r\n                        'showClose': true\r\n                    })\r\n                    this.getWallBgImg()\r\n                }).catch((err)=>{ console.error(err) })\r\n            },\r\n            /* \r\n             * 清除图     片前对图片信息做出判断\r\n             */\r\n            bgImageClear() {\r\n                if(this.wallBgInfo.length == 0) {\r\n                    this.$message({\r\n                        'showClose':'true',\r\n                        'duration':'1500',\r\n                        'message': this.$t('该屏组未设置背景图片'),\r\n                        'showClose': true\r\n                    })\r\n                    return\r\n                }\r\n                this.wallBgInfo.forEach((item) => {\r\n                    this.delBgImg(item.ID)\r\n                })\r\n            },\r\n            /* \r\n             * 添加图片并应用图片\r\n             */\r\n            bgImageSubmit() {\r\n              if(!this.isbgImg) {\r\n                    this.$message({\r\n                        'showClose':'true',\r\n                        'duration':'1500',\r\n                        'message': this.$t('请上传背景图片'),\r\n                        'showClose': true\r\n                    })\r\n                    return\r\n                }\r\n                var url = '/api.v2.do.bgImage.add'\r\n                var params = {\r\n                    userid: this.$auth.getuid(),\r\n                    body: {\r\n                        WallID: this.formItem.WallID,\r\n                        Row: this.formItem.Row,\r\n                        Column: this.formItem.Column,\r\n                        Path: this.formItem.Path,\r\n                        Type: this.formItem.Type,\r\n                    }\r\n                }\r\n                this.$http(url, params).then((res) => {\r\n                    if (res.data.status !== 0) {\r\n                        this.$message({\r\n                           'showClose':'true',\r\n                            'duration':'1500',\r\n                            'type': 'warning',\r\n                            'message': this.$t(this.$msg[res.data.status])\r\n                        })\r\n                        return\r\n                    }\r\n                    this.getWallBgImg()\r\n                    this.$message({\r\n                        'showClose':'true',\r\n                        'duration':'1500',\r\n                        'type': 'success',\r\n                        'message': this.$t('操作成功')\r\n                    })\r\n                }).catch((err) => {})\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// bgimgsetting.vue?2dd6da80","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?minimize!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-0501b2e8\",\"scoped\":false,\"hasInlineConfig\":false}!./~/autoprefixer-loader!./~/less-loader!./src/views/system/systemsetting/styles/bgimgsetting.less\n// module id = 857\n// module chunks = 12","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"bgimgsetting\"\n  }, [_c('el-row', [_c('el-col', {\n    attrs: {\n      \"span\": 24\n    }\n  }, [_c('div', {\n    staticClass: \"title\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.$t('底图设置')))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"title\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.$t('可设置屏幕的背景高分底图')))])])])], 1), _vm._v(\" \"), _c('el-row', {\n    staticStyle: {\n      \"height\": \"100%\"\n    },\n    attrs: {\n      \"gutter\": 16\n    }\n  }, [_c('el-col', {\n    staticStyle: {\n      \"height\": \"100%\"\n    },\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('div', {\n    staticClass: \"bgform\"\n  }, [_c('el-form', {\n    attrs: {\n      \"model\": _vm.formItem,\n      \"label-width\": \"100px\",\n      \"label-position\": \"left\"\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": this.$t('屏组')\n    }\n  }, [_c('el-select', {\n    staticClass: \"el-select-block\",\n    attrs: {\n      \"placeholder\": \" \"\n    },\n    on: {\n      \"change\": _vm.screenGroupChange\n    },\n    model: {\n      value: (_vm.formItem.WallID),\n      callback: function($$v) {\n        _vm.$set(_vm.formItem, \"WallID\", $$v)\n      },\n      expression: \"formItem.WallID\"\n    }\n  }, _vm._l((_vm.screen), function(item) {\n    return _c('el-option', {\n      attrs: {\n        \"value\": item.ID,\n        \"label\": item.Name\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": this.$t('上传图片')\n    }\n  }, [_c('el-upload', {\n    ref: \"uploadimg\",\n    staticClass: \"uploadimg\",\n    attrs: {\n      \"accept\": \"image/png,image/jpeg\",\n      \"on-success\": _vm.uploadSucc,\n      \"on-error\": _vm.uploadErr,\n      \"name\": \"image_path\",\n      \"action\": _vm.uploadUri,\n      \"multiple\": false\n    }\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t('点击上传'))), _c('i', {\n    staticClass: \"fa fa-upload\"\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"el-upload__tip\",\n    attrs: {\n      \"slot\": \"tip\"\n    },\n    slot: \"tip\"\n  }, [_vm._v(_vm._s(_vm.$t('只能上传jpg/png文件')))])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": _vm.$t('更新图片选项')\n    }\n  }, [_c('el-radio-group', {\n    on: {\n      \"change\": _vm.imgApply\n    },\n    model: {\n      value: (_vm.formItem.Type),\n      callback: function($$v) {\n        _vm.$set(_vm.formItem, \"Type\", $$v)\n      },\n      expression: \"formItem.Type\"\n    }\n  }, [_c('el-radio', {\n    attrs: {\n      \"label\": 1\n    }\n  }, [_vm._v(_vm._s(_vm.$t('将所选图片覆盖整个幕墙')))]), _c('br'), _vm._v(\" \"), _c('el-radio', {\n    attrs: {\n      \"label\": 2\n    }\n  }, [_vm._v(_vm._s(_vm.$t('将所选图片应用到每个单元')))]), _c('br'), _vm._v(\" \"), _c('el-radio', {\n    attrs: {\n      \"label\": 3\n    }\n  }, [_vm._v(_vm._s(_vm.$t('将所选图片应用到指定单元')))])], 1)], 1), _vm._v(\" \"), _c('el-form-item', {\n    attrs: {\n      \"label\": _vm.$t('图片指定单元')\n    }\n  }, [_c('el-select', {\n    staticClass: \"el-select-block\",\n    attrs: {\n      \"placeholder\": _vm.$t('请选择'),\n      \"disabled\": this.formItem.Type != 3\n    },\n    on: {\n      \"change\": _vm.setImgToGrid\n    },\n    model: {\n      value: (_vm.formItem.grid),\n      callback: function($$v) {\n        _vm.$set(_vm.formItem, \"grid\", $$v)\n      },\n      expression: \"formItem.grid\"\n    }\n  }, _vm._l((_vm.gridList), function(item) {\n    return _c('el-option', {\n      attrs: {\n        \"value\": item,\n        \"label\": item\n      }\n    })\n  }))], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"bgimgbtn\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.bgImageClear\n    }\n  }, [_vm._v(_vm._s(_vm.$t('清除背景')))]), _vm._v(\" \"), _c('el-button', {\n    attrs: {\n      \"type\": \"primary\"\n    },\n    on: {\n      \"click\": _vm.bgImageSubmit\n    }\n  }, [_vm._v(_vm._s(_vm.$t('应用背景')))])], 1)], 1)], 1)]), _vm._v(\" \"), _c('el-col', {\n    staticStyle: {\n      \"height\": \"100%\"\n    },\n    attrs: {\n      \"span\": 12\n    }\n  }, [_c('div', {\n    staticClass: \"img\"\n  }, [_c('div', {\n    ref: \"bgimg\",\n    staticClass: \"bgimg\",\n    attrs: {\n      \"id\": \"bgimg\"\n    }\n  }, _vm._l((_vm.gridList), function(item) {\n    return _c('div', {\n      ref: item,\n      refInFor: true,\n      staticClass: \"bg-grid\",\n      style: ({\n        'width': _vm.bgScreenWidth,\n        'height': _vm.bgScreenHeight\n      })\n    }, [_c('span', [_vm._v(_vm._s(item))])])\n  }))])])], 1)], 1)\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-loader/node_modules/vue-hot-reload-api\").rerender(\"data-v-0501b2e8\", module.exports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0501b2e8\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/system/systemsetting/bgimgsetting.vue\n// module id = 886\n// module chunks = 12"],"sourceRoot":""}